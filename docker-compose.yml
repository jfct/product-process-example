services:
  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/product_db
      - REDIS_URL=redis://redis:6379
      - QUEUE_HOST=redis://redis:6379
    depends_on:
      - mongodb
      - redis

  review-service-1:
    build:
      context: .
      dockerfile: review-service/Dockerfile
    env_file:
      - ./.env
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/product_db
      - REDIS_URL=redis://redis:6379
      - QUEUE_HOST=redis://redis:6379
    depends_on:
      - mongodb
      - redis

  review-service-2:
    build:
      context: .
      dockerfile: ./review-service/Dockerfile
    env_file:
      - .env
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/product_db
      - REDIS_URL=redis://redis:6379
      - QUEUE_HOST=redis://redis:6379
    depends_on:
      - mongodb
      - redis

  mongodb:
    image:  mongo:4.4.17-focal
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password

  mongo-express:
    image: mongo-express:0.54.0
    restart: always
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

volumes:
  mongodb_data:
